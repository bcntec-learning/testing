

 JUnit Usage and Idioms (https://github.com/junit-team/junit4/wiki)

   - Assertions - your bread and butter for unit testing
   - Test Runners - how tests should be executed
   - Aggregating tests in Suites - how to combine multiple related tests into a test suite
   - Test Execution Order - specifying what order to run unit tests
   - Exception Testing - how to specify expected exceptions in unit tests
   - Matchers and assertThat - how to use Hamcrest matchers and more descriptive assertions
   - Ignoring Tests - how to disable test methods or classes
   - Timeout for Tests - how to specify maximum execution times for tests
   - Parameterized Tests - writing tests that can be executed multiple times with different parameter values
   - Assumptions with Assume - similar to assertions, but without making tests fail
   - Rules - stop extending abstract test classes and start writing test rules
    Theories - write tests that are more like scientific experiments using randomly generated data
    Test Fixtures - specify set up and clean up methods on a per-method and per-class basis
   - Categories - group your tests together for easier test filtering
    Use with Maven - how to use JUnit with your Maven build
    Multithreaded code and Concurrency - basic ideas behind testing concurrent code
    Java contract test helpers
    Continuous Testing




http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html